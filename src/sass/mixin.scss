// animation

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

// media queries
@mixin media($type) {
    @if $type == tablet {
        @media (max-width: 768px)  { @content; }
    }
    @else if $type == mobile {
        @media (max-width: 600px)  { @content; }
    }
}

// animation
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

// CSS3 calc() function to perform calculations 
@mixin calc($property, $expression) { 
  #{$property}: -webkit-calc(#{$expression}); 
  #{$property}: -moz-calc(#{$expression});
  #{$property}: calc(#{$expression}); 
} 

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

// media queries
@mixin media($type) {
    @if $type == desktop {
        @media (max-width: 980px) { @content; }
    }
    @if $type == tablet {
        @media (max-width: 768px)  { @content; }
    }
    @else if $type == mobile {
        @media (max-width: 600px)  { @content; }
    }
}

@mixin media-max-width($type) {
    @if $type == desktop {
        @media (max-width: 980px) { @content; }
    }
    @if $type == tablet {
        @media (max-width: 768px)  { @content; }
    }
    @else if $type == mobile {
        @media (max-width: 600px)  { @content; }
    }
}

// media queries
@mixin media-min-width($type) {
    @if $type == desktop {
        @media (min-width: 980px + 1) { @content; }
    }
    @if $type == tablet {
        @media (min-width: 768px + 1)  { @content; }
    }
    @else if $type == mobile {
        @media (min-width: 600px + 1)  { @content; }
    }
}